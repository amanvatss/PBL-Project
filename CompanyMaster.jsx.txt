import React, { useState } from "react";
import { useForm, useFieldArray } from "react-hook-form";
import axios from "axios";
import "./CompanyMaster.css"; // Add your custom styles here

const CompanyMaster = () => {
  const { register, control, handleSubmit, reset, watch } = useForm();
  const { fields: promoters, append: addPromoter, remove: removePromoter } = useFieldArray({ control, name: "promoters" });
  const { fields: users, append: addUser, remove: removeUser } = useFieldArray({ control, name: "users" });

  const [kycDocuments, setKycDocuments] = useState([]);

  const handleFileUpload = (e) => {
    setKycDocuments(e.target.files);
  };

  const onSubmit = async (data) => {
    try {
      const formData = new FormData();
      formData.append("companyDetails", JSON.stringify(data));
      for (const file of kycDocuments) {
        formData.append("kycDocuments", file);
      }
      
      const response = await axios.post("/api/company-master", formData, {
        headers: { "Content-Type": "multipart/form-data" },
      });
      alert("Company details saved successfully!");
      reset();
      setKycDocuments([]);
    } catch (error) {
      console.error("Error saving company details:", error);
      alert("Failed to save company details.");
    }
  };

  return (
    <div className="company-master-container">
      <h1>Company Master</h1>
      <form onSubmit={handleSubmit(onSubmit)} className="company-master-form">
        <h2>Company Details</h2>
        <div className="form-group">
          <label>Name</label>
          <input type="text" {...register("companyName", { required: true })} />
        </div>
        <div className="form-group">
          <label>Address</label>
          <textarea {...register("address", { required: true })} />
        </div>
        <div className="form-group">
          <label>Type</label>
          <select {...register("type", { required: true })}>
            <option value="">Select</option>
            <option value="Partnership">Partnership</option>
            <option value="Pvt Ltd">Pvt Ltd</option>
            <option value="LLP">LLP</option>
            <option value="Prop">Prop</option>
            <option value="AOP">AOP</option>
            <option value="Society">Society</option>
          </select>
        </div>
        <div className="form-group">
          <label>PAN</label>
          <input type="text" {...register("pan", { required: true })} />
        </div>
        <div className="form-group">
          <label>GST</label>
          <input type="text" {...register("gst", { required: true })} />
        </div>

        <h2>Promoter Details</h2>
        {promoters.map((item, index) => (
          <div key={item.id} className="dynamic-section">
            <h3>Promoter {index + 1}</h3>
            <div className="form-group">
              <label>Name</label>
              <input type="text" {...register(`promoters.${index}.name`, { required: true })} />
            </div>
            <div className="form-group">
              <label>PAN</label>
              <input type="text" {...register(`promoters.${index}.pan`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Aadhar</label>
              <input type="text" {...register(`promoters.${index}.aadhar`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Address</label>
              <textarea {...register(`promoters.${index}.address`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Mobile No</label>
              <input type="text" {...register(`promoters.${index}.mobileNo`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Designation</label>
              <input type="text" {...register(`promoters.${index}.designation`, { required: true })} />
            </div>
            <button type="button" onClick={() => removePromoter(index)}>
              Remove Promoter
            </button>
          </div>
        ))}
        <button type="button" onClick={() => addPromoter({})}>Add Promoter</button>

        <h2>User Details</h2>
        {users.map((item, index) => (
          <div key={item.id} className="dynamic-section">
            <h3>User {index + 1}</h3>
            <div className="form-group">
              <label>Name</label>
              <input type="text" {...register(`users.${index}.name`, { required: true })} />
            </div>
            <div className="form-group">
              <label>PAN</label>
              <input type="text" {...register(`users.${index}.pan`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Aadhar</label>
              <input type="text" {...register(`users.${index}.aadhar`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Address</label>
              <textarea {...register(`users.${index}.address`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Mobile No</label>
              <input type="text" {...register(`users.${index}.mobileNo`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Designation</label>
              <input type="text" {...register(`users.${index}.designation`, { required: true })} />
            </div>
            <div className="form-group">
              <label>Access</label>
              <select {...register(`users.${index}.access`, { required: true })}>
                <option value="">Select</option>
                <option value="Limited">Limited</option>
                <option value="Unlimited">Unlimited</option>
              </select>
            </div>
            <button type="button" onClick={() => removeUser(index)}>
              Remove User
            </button>
          </div>
        ))}
        <button type="button" onClick={() => addUser({})}>Add User</button>

        <h2>KYC Documents</h2>
        <div className="form-group">
          <label>Upload KYC Documents</label>
          <input type="file" multiple onChange={handleFileUpload} />
        </div>

        <button type="submit">Submit</button>
      </form>
    </div>
  );
};

export default CompanyMaster;
